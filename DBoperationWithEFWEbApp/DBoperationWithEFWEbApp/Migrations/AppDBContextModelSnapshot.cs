// <auto-generated />
using System;
using DBoperationWithEFWEbApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DBoperationWithEFWEbApp.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DBoperationWithEFWEbApp.Data.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NoOfPage")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("DBoperationWithEFWEbApp.Data.BookPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("BookID")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookID");

                    b.HasIndex("CurrencyID");

                    b.ToTable("BookPrices");
                });

            modelBuilder.Entity("DBoperationWithEFWEbApp.Data.Currency", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Currencyid")
                        .HasColumnType("int");

                    b.Property<string>("Descreption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Isactive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Currencyid");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Created = new DateTime(2024, 5, 20, 6, 52, 53, 60, DateTimeKind.Local).AddTicks(9994),
                            Descreption = "Indian INR",
                            Isactive = true,
                            LastUpdated = new DateTime(2024, 5, 20, 6, 52, 53, 61, DateTimeKind.Local).AddTicks(7),
                            Title = "INR"
                        },
                        new
                        {
                            id = 2,
                            Created = new DateTime(2024, 5, 20, 6, 52, 53, 61, DateTimeKind.Local).AddTicks(11),
                            Descreption = "Dollar",
                            Isactive = true,
                            LastUpdated = new DateTime(2024, 5, 20, 6, 52, 53, 61, DateTimeKind.Local).AddTicks(11),
                            Title = "Dollar"
                        },
                        new
                        {
                            id = 3,
                            Created = new DateTime(2024, 5, 20, 6, 52, 53, 61, DateTimeKind.Local).AddTicks(12),
                            Descreption = "Euro",
                            Isactive = true,
                            LastUpdated = new DateTime(2024, 5, 20, 6, 52, 53, 61, DateTimeKind.Local).AddTicks(13),
                            Title = "Euro"
                        },
                        new
                        {
                            id = 4,
                            Created = new DateTime(2024, 5, 20, 6, 52, 53, 61, DateTimeKind.Local).AddTicks(13),
                            Descreption = "Diner",
                            Isactive = true,
                            LastUpdated = new DateTime(2024, 5, 20, 6, 52, 53, 61, DateTimeKind.Local).AddTicks(14),
                            Title = "Diner"
                        });
                });

            modelBuilder.Entity("DBoperationWithEFWEbApp.Data.Language", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Hindi",
                            Title = "Hindi"
                        },
                        new
                        {
                            ID = 2,
                            Description = "English",
                            Title = "English"
                        },
                        new
                        {
                            ID = 3,
                            Description = "Urdu",
                            Title = "Urdu"
                        },
                        new
                        {
                            ID = 4,
                            Description = "Panjabhi",
                            Title = "Panjabi"
                        });
                });

            modelBuilder.Entity("DBoperationWithEFWEbApp.Data.BookPrice", b =>
                {
                    b.HasOne("DBoperationWithEFWEbApp.Data.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBoperationWithEFWEbApp.Data.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("DBoperationWithEFWEbApp.Data.Currency", b =>
                {
                    b.HasOne("DBoperationWithEFWEbApp.Data.Currency", null)
                        .WithMany("currencies")
                        .HasForeignKey("Currencyid");
                });

            modelBuilder.Entity("DBoperationWithEFWEbApp.Data.Currency", b =>
                {
                    b.Navigation("currencies");
                });
#pragma warning restore 612, 618
        }
    }
}
